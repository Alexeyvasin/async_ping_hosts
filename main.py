import asyncio
import itertools
import time

import aioping

MAX_CONCURRENT_PINGS = 200


def print_to_files(pinged, not_pinged):
    with open('pinged.txt', 'w') as f_pinged, open('not_pinged.txt', 'w') as f_not_pinged:
        for host in pinged:
            f_pinged.write(f"{host}\n")
        for host in not_pinged:
            f_not_pinged.write(f"{host}\n")


def load_ips(filename: str) -> list[str]:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ IP-–∞–¥—Ä–µ—Å–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ 192.168.1-2.1-3
    """
    ips = []
    with open(filename, 'r') as for_ping:
        for ip in for_ping:
            ip = ip.strip()
            if not ip:
                continue

            # –¥–æ–±–∞–≤–ª—è–µ–º "192." –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ 3 –æ–∫—Ç–µ—Ç–∞
            if len(octets := ip.split('.')) < 4:
                ip = f'192.{ip}'
                octets = ip.split('.')

            octets_ranges = []
            for octet in octets:
                if '-' in octet:
                    start, end = map(int, octet.split('-'))
                    octets_ranges.append([str(i) for i in range(start, end + 1)])
                else:
                    octets_ranges.append([octet])

            # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
            for combo in itertools.product(*octets_ranges):
                ips.append(".".join(combo))

    return ips


async def do_ping(host: str, pinged, non_pinged, sem: asyncio.Semaphore):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–∏–Ω–≥ –æ–¥–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —Å–µ–º–∞—Ñ–æ—Ä–∞"""
    async with sem:
        try:
            delay = await aioping.ping(host, timeout=5) * 1000
            pinged.append(host)
            print(f"Ping {host} response in {delay:.2f} ms")
        except TimeoutError:
            non_pinged.append(host)
            print(f"{host} Timed out")


def for_sort_ip(host: str) -> int:
    """–ö–ª—é—á —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ IP"""
    sections = host.strip().split('.')
    num_for_sort = ''
    for num in sections:
        while len(num) < 3:
            num = f'0{num}'
        num_for_sort += num
    return int(num_for_sort)


# def sort_non_pinged_hosts(file: str):
#     """–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –Ω–µ–ø–∏–Ω–≥—É—é—â–∏—Ö—Å—è —Ö–æ—Å—Ç–æ–≤"""
#     try:
#         with open(file, 'r') as f_handle:
#             non_sorted = {line.strip() for line in f_handle if line.strip()}
#         yes_sorted = sorted(non_sorted, key=for_sort_ip)
#         with open(file, 'w') as f_handle:
#             for num, host in enumerate(yes_sorted):
#                 f_handle.write(f'{num + 1}) {host}\n')
#     except FileNotFoundError:
#         pass


async def main():
    pinged = list()
    non_pinged = list()
    ips = load_ips('for_ping.txt')

    # # –æ—á–∏—â–∞–µ–º —Ñ–∞–π–ª –Ω–µ–ø–∏–Ω–≥–æ–≤–∞–Ω–Ω—ã—Ö —Ö–æ—Å—Ç–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    # open('not_pinged_hosts.txt', 'w').close()

    # —Å–æ–∑–¥–∞—ë–º —Å–µ–º–∞—Ñ–æ—Ä ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á
    sem = asyncio.Semaphore(MAX_CONCURRENT_PINGS)  # üîß –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 200, 500)

    tasks = (do_ping(ip, pinged, non_pinged, sem) for ip in ips)
    await asyncio.gather(*tasks)

    # sort_non_pinged_hosts('not_pinged_hosts.txt')
    pinged.sort(key=for_sort_ip)
    non_pinged.sort(key=for_sort_ip)
    # print(pinged)
    # print(non_pinged)
    print_to_files(pinged, non_pinged)
    print()
    await asyncio.sleep(1)



if __name__ == "__main__":
    asyncio.run(main())
    input('–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Å–æ–ª–∏ - –Ω–∞–∂–º–∏ –≠–Ω—Ç—ç—Ä!')
